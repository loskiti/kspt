// сервер
#include <iostream>
#include <winsock2.h>
#include <windows.h>
using namespace std;
#define MAX_CLIENTS 10
int users=0; // количество активных пользователей
SOCKET usersList[MAX_CLIENTS]; // сокеты подключенных клиентов
DWORD WINAPI ServeClient(LPVOID clientSocket) 
{
	SOCKET socket=*((SOCKET *) clientSocket); //разыменывание укзателя ( передается адрес, а нужны значения)
	char buffer[10*81]; //10 строк
	// пока не разорвано соединение прием смс
	while (int bytesRecv=recv(socket, buffer, sizeof(buffer), 0))  
	{
		if(bytesRecv==0) //соединение разорвано
			break;
		if(bytesRecv==SOCKET_ERROR) 
		{
			cout<<"Ошибка"<<WSAGetLastError()<<endl;
			closesocket(socket);
			WSACleanup();
			return -1;
		}
		if(bytesRecv>0) 
		{// отправка всем пользователям, которые онлайн
			for (int i=0; i<MAX_CLIENTS; i++) 
			{
				if(usersList[i]!=INVALID_SOCKET)
					send(usersList[i], buffer, bytesRecv, 0);
				else
					break;
			}
		}
	}
		usersList[users]=INVALID_SOCKET;
		users--;
		cout<<"пользователь отключился"<<endl;
		closesocket(socket);
		ExitThread(0);
		return 0;

	}
	int main()
	{
		setlocale(LC_ALL, "russian");
	// пользователи оффлайн
		for (int i=0; i<MAX_CLIENTS; i++)
			usersList[i]=INVALID_SOCKET;
		char buffer[1024];
		// объявление библиотеки сокетов
		WSAStartup(MAKEWORD(2,2),(WSADATA *) &buffer[0]);
		// создание сокета
		SOCKET servSocket;
		if ((servSocket=socket(AF_INET,SOCK_STREAM,0))<0)
		{
			cout<<"Ошибка"<<WSAGetLastError()<<endl;
			WSACleanup(); // освобождение ресурсов
			return -1;

		}
		// настройка адреса и порта сокета
		sockaddr_in local_addr;
		local_addr.sin_family=AF_INET;
		local_addr.sin_port=htons(1024); 
		local_addr.sin_addr.s_addr=0; // любой ip
		local_addr.sin_addr.s_addr=INADDR_ANY; // любой интерфейс
		// связываем адрес с сокетом
		if(bind(servSocket, (sockaddr*) &local_addr, sizeof(local_addr))!=0) 
		{
			cout<<"Ошибка"<<WSAGetLastError()<<endl;
			closesocket(servSocket); //очищаем socket
			WSACleanup();
			return -1;
		}
		// прослушка
		if(listen(servSocket, 10)!=0) {
			cout<<"Error listen "<<WSAGetLastError()<<endl;
			closesocket(servSocket);
			WSACleanup();
			return -1;
		}
		cout<<"Ожидаем подключение"<<endl;

		SOCKET clientSocket;   
		sockaddr_in clientAddr; //ip
		int clientAddrSize=sizeof(clientAddr);
		// соединение
		while (true)
		{
			clientSocket=accept(servSocket, (sockaddr *) &clientAddr, &clientAddrSize);
			usersList[users]=clientSocket;
			users++;
			cout<<"Новое подключение, ip "<<inet_ntoa(clientAddr.sin_addr) <<endl;
			DWORD threadID;// новый поток
			CreateThread(0,0,ServeClient,&clientSocket,0,&threadID);
			//CloseHandle(threadID);      ПОСМОТРЕТЬ!!!!!!!!!!!!!
		}

		return 0;
	}
